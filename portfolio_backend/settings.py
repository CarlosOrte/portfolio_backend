"""
Django settings for portfolio_backend project.

Generated by 'django-admin startproject' using Django 5.2.4.
"""

from pathlib import Path
import os
import dj_database_url 
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# --------------------
# 1. SEGURIDAD Y ENTORNO
# --------------------
# Estas configuraciones se obtienen de las variables de entorno de Render,
# lo que es más seguro que hardcodearlas.

# SECRET_KEY es una variable de entorno en Render.
SECRET_KEY = os.environ.get('SECRET_KEY', 'default-insecure-key')

# DEBUG debe ser False en producción.
DEBUG = False

# ALLOWED_HOSTS acepta los dominios de Render.
# Debes añadir tus dominios de Render y cualquier dominio personalizado aquí.
ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # mis Aplicaciones
    'projects',

    # Aplicaciones de terceros
    'rest_framework',
    'corsheaders',
    'storages',
]

# Configuración de Django Storages y AWS S3
AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')
AWS_S3_REGION_NAME = 'EE.UU. Este (Ohio) us-east-2' # Ej: 'us-east-1'
AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'
AWS_DEFAULT_ACL = 'public-read' # Hace que las imágenes sean públicas

# URLS para archivos media y estáticos
MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/media/'
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

# (Opcional) Si quieres también los archivos estáticos en S3:
STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/static/'
STATICFILES_STORAGE = 'storages.backends.s3boto3.S3StaticStorage'

# --------------------
# 2. MIDDLEWARE Y CORS
# --------------------

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware', # Debe ir antes de CommonMiddleware
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Configuración de CORS para que React pueda comunicarse con Django.
# Las URL de los orígenes permitidos se obtienen de una variable de entorno.
CORS_ALLOWED_ORIGINS = os.environ.get('CORS_ALLOWED_ORIGINS', '').split(',')

# --------------------
# 3. BASE DE DATOS
# --------------------
# Se usa dj_database_url para parsear la URL de conexión a la base de datos que
# proporciona Render en la variable de entorno DATABASE_URL.

DATABASES = {
    'default': dj_database_url.config(
        default='sqlite:///db.sqlite3',
        conn_max_age=600
    )
}

# --------------------
# 4. ARCHIVOS ESTÁTICOS Y DE MEDIA
# --------------------
# Configuración para que Render pueda servir archivos estáticos y media.
# Esto es esencial para el despliegue.

# Archivos estáticos de Django (CSS, JS del admin, etc.)
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Archivos de media (imágenes de tus proyectos)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# --------------------
# 5. OTRAS CONFIGURACIONES
# --------------------

ROOT_URLCONF = 'portfolio_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'portfolio_backend.wsgi.application'

# Configuración de validación de contraseñas, internacionalización, etc.
# Estas configuraciones por defecto están bien.
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'